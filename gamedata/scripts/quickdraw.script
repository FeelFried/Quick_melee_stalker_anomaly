--[[
Quick melee reworked addon:
----------------Core script
----------For Anomaly 1.5.1
---------------------------
---------Author: Feel_Fried
---------------------------
----------------------v1.6a
---------------------------
-------------------30.10.21
---------------------------
Addon download page: https://www.moddb.com/mods/stalker-anomaly/addons/quick-melee-reworked-151
--]]
local keybind = 47
local wpn = nil
local weight = 1
local anim_hit_time = 1
local cam_name = "attack_an.anm"
function on_game_start()
	RegisterScriptCallback("on_key_press",on_key_press)
	RegisterScriptCallback("on_option_change", loadsettings) 
	RegisterScriptCallback("on_game_load", on_game_load)
	RegisterScriptCallback("actor_on_before_death", actor_on_before_death)
	loadsettings()
end

function actor_on_before_death()
	UnregisterScriptCallback("on_key_press",on_key_press)
	for i=1,4 do
		RemoveTimeEvent("quick_melee_reworked",i)
	end
end

function on_game_load()
	loadsettings()
end

function loadsettings()
	if ui_mcm then
		keybind = tonumber(ui_mcm.get("quick_melee/keybind"))
	else
		keybind = 47
	end
end

local anm_state = 0
local outfit_noise_snd = sound_object("weapons\\spas12\\spas12_draw")
--local flesh_hit_snd = sound_object("quick_melee\\flesh\\flesh_"..math.random(1,6))
--local wood_hit_snd = sound_object("quick_melee\\wood\\wood_"..math.random(1,4))
--local metal_hit_snd = sound_object("quick_melee\\metal\\metal_"..math.random(1,4))
--local swing_snd = sound_object("quick_melee\\swing\\swing_"..math.random(1,6))
	
local armed_anim = "quickdraw_wpn_hit"

local knifesm = { 
	["wpn_knife3"] = true,
	["wpn_knife4"] = true,
	["wpn_knife5"] = true,
	["wpn_knife"] = true,
	["wpn_knife2"] = true,
}	
				 
local hit_slot = {
	[0] = true,
	[1] = true,
	[2] = true,
	[3] = true,
	[4] = true,
	[5] = false,
	[6] = true,
}
local function clamp(x,min,max)
	return math.min(math.max(x, min), max)
end

local function flesh_fx(fx_pos)
	local dir2 = device().cam_dir
	dir2 = dir2:mul(-1)
	fx_pos.x = fx_pos.x + 0.3*dir2.x
	fx_pos.y = fx_pos.y + 0.3*dir2.y
	fx_pos.z = fx_pos.z + 0.3*dir2.z
	local hit_fx = particles_object("hit_fx\\hit_flesh_01")
	hit_fx:set_direction(dir2)
	hit_fx:play_at_pos(fx_pos)
	local hit_fx2 = particles_object("hit_fx\\hit_flesh_02a")
	hit_fx2:set_direction(dir2)
	hit_fx2:play_at_pos(fx_pos)
	local hit_fx3 = particles_object("hit_fx\\hit_knife_flesh_00")
	hit_fx3:set_direction(dir2)
	hit_fx3:play_at_pos(fx_pos)
end

local function wood_fx(fx_pos,pos)
	local dir2 = device().cam_dir
	dir2 = dir2:mul(-1)
	local hit_fx = particles_object("hit_fx\\hit_wood_01")
	hit_fx:set_direction(dir2)
	hit_fx:play_at_pos(fx_pos)
	local hit_fx2 = particles_object("hit_fx\\hit_wood_01a")
	hit_fx2:set_direction(dir2)
	hit_fx2:play_at_pos(fx_pos)
end

local function metal_fx(fx_pos,pos)
	local dir2 = device().cam_dir
	dir2 = dir2:mul(-1)
	fx_pos.x = fx_pos.x + 0.1*dir2.x
	fx_pos.y = fx_pos.y + 0.1*dir2.y
	fx_pos.z = fx_pos.z + 0.1*dir2.z
	local hit_fx = particles_object("hit_fx\\hit_metal_00")
	hit_fx:set_direction(dir2)
	hit_fx:play_at_pos(fx_pos)
	local hit_fx2 = particles_object("hit_fx\\hit_metal_01")
	hit_fx2:set_direction(dir2)
	hit_fx2:play_at_pos(fx_pos)
	local hit_fx3 = particles_object("hit_fx\\hit_metal_02")
	hit_fx3:set_direction(dir2)
	hit_fx3:play_at_pos(fx_pos)
end

function on_key_press(key)
	if (key == keybind) then 
		hit_key()
	end
end

function hit_key()
	
	if (actor_menu.get_last_mode() ~= 0) then return end
	
	if not (hit_slot[db.actor:active_slot()]) then return end

	if (anm_state ~= 0) then return end
	
	anim_sec = "quickdraw_kulak_hit"
	anim_name = "anm_hide_16x9"
	last_slot = db.actor:active_slot() or 0
	weight = 0.5
	anim_hit_time = 1
	cam_name = "attack_an.anm"
	if last_slot ~= 0 then
		wpn = db.actor:item_in_slot(last_slot)
		weight = wpn:weight()
		if knifesm[wpn:section()] then 
			return 
		end
		anim_sec = IsPistol(wpn) and armed_anim or "quickdraw_wpn_b_hit"
		anim_name = IsPistol(wpn) and "anm_attack_16x9" or "anm_show_16x9"
		anim_hit_time = IsPistol(wpn) and 1 or 1.5
		cam_name = IsPistol(wpn) and "attack_an.anm" or "attack_an2.anm"
	end
	
	if last_slot == 4 or last_slot == 6 then
		anim_sec = armed_anim
		anim_name = "anm_attack_16x9"
		anim_hit_time = 1
		weight = 0.5
		cam_name = "attack_an.anm"
	end
	anm_state = 1

	hit_animation()
end


	
function hit_animation()
	CreateTimeEvent("quick_melee_reworked", 1, 0.01, anim_init)
end


function anim_init()
	outfit_noise_snd:play(db.actor, 0, sound_object.s2d)	
	game.play_hud_motion(2, anim_sec .. "_hud", anim_name, true, anim_hit_time)
	level.add_cam_effector('quick_melee\\'..cam_name, 8073, false,'')
	CreateTimeEvent("quick_melee_reworked", 2, 0.5/anim_hit_time, hit_test)
	CreateTimeEvent("quick_melee_reworked", 4, 0.35/anim_hit_time, swing_sound)
	return true
end

function swing_sound()
	local swing_snd = sound_object("quick_melee\\swing\\swing_"..math.random(1,6))
	swing_snd:play(db.actor, 0, sound_object.s2d)
	return true
end

function ray_test()
	local pos = device().cam_pos
    local dir = device().cam_dir
    local pick = ray_pick()
    local dist = 1.5
    pick:set_position(pos)
    pick:set_direction(dir)
    pick:set_flags(2)
    pick:set_range(dist)
    pick:query()
    local distance = pick:get_distance()
	fx_pos = pos
	if distance == 0 then return end
	fx_pos.x = pos.x + distance*dir.x
	fx_pos.y = pos.y + distance*dir.y 
	fx_pos.z = pos.z + distance*dir.z
	wallmarks_manager():place(dir, fx_pos, 15, 0.2, "explosion_marks", db.actor,-1)
	metal_fx(fx_pos,fx_pos)
	local metal_hit_snd = sound_object("quick_melee\\metal\\metal_"..math.random(1,4))
	metal_hit_snd:play(db.actor, 0, sound_object.s2d)
end


function ray_hit_test()
	local pos = device().cam_pos
    local dir = device().cam_dir
	local actor = db.actor
    local dist = 1.6
	local pick = ray_pick()
	pick:set_ignore_object(actor)
	pick:set_position(pos)
	pick:set_flags(1)
	pick:set_range(dist)
	dir.x = clamp(dir.x - 0.032,-1,1)
	dir.z = clamp(dir.z - 0.032,-1,1)
	dir.y = clamp(dir.y - 0.032,-1,1)
	for i = 1,32 do
		dir.x = clamp(dir.x + 0.002,-1,1)
		dir.z = clamp(dir.z + 0.002,-1,1)
		dir.y = clamp(dir.y + 0.002,-1,1)
		pick:set_direction(dir)
		pick:query()
		obj_o = pick:get_object()
		obj_b = pick:get_element()
		if obj_o then
			return {obj_o,obj_b}
		end
	end
	return nil
end

function hit_test()
	level.add_cam_effector('shoot\\s3_e1_1.anm', 8063, false,'')
	CreateTimeEvent("quick_melee_reworked", 3, 1.22/anim_hit_time, anim_end)
	local obj = level.get_target_obj()
	if not obj then
		obj_ent = ray_hit_test()
	end
	obj = obj and obj or (obj_ent and obj_ent[1])
	if not obj then
		ray_test()
		return true
	end
	local bone = obj_ent and obj_ent[2] or level.get_target_element()
	--local bone = level.get_target_element()
	local cls = obj.clsid and obj:clsid()
	local bone_prop = quickdraw_bone_mapper.get_bone_prop(cls,bone)
	local pos = device().cam_pos
	local obj_dist = pos:distance_to_sqr(obj:bone_position(bone_prop[1]))
	if ( obj_dist > 6) then
		return true
	end
	
	local who = db.actor
	local h = hit()
	local dir = device().cam_dir
	local fx_pos = obj:bone_position(bone_prop[1])
	local spawn_name = ini_sys:r_string_ex(obj:section(),"$spawn")
	h.power = weight*bone_prop[2]
	printf(bone_prop[2])
	h.direction = dir
	h.bone = bone_prop[1] 
	h.draftsman = who
	h.type = hit.wound
	obj:hit(h)
	
	if IsMonster(nil,cls) or IsStalker(nil,cls) then
		local flesh_hit_snd = sound_object("quick_melee\\flesh\\flesh_"..math.random(1,6))
		flesh_hit_snd:play(obj, 0, sound_object.s2d)	
		local blood_trace = dir
		blood_trace.x = 0
		blood_trace.y = -1 
		blood_trace.z = 0 
		wallmarks_manager():place_skeleton(obj, "bloody_marks", fx_pos, dir, 0.2,-1)
		wallmarks_manager():place(blood_trace, fx_pos, 15, 0.3, "bloody_marks", obj,-1)
		flesh_fx(fx_pos)
	elseif spawn_name and string.find(spawn_name,"wood") then
		local wood_hit_snd = sound_object("quick_melee\\wood\\wood_"..math.random(1,4))
		wood_hit_snd:play(obj, 0, sound_object.s2d)	
		local fx_dist = db.actor:position():distance_to_sqr(obj:bone_position(bone_prop[1]))
		fx_pos.x = pos.x + fx_dist*dir.x
		fx_pos.y = pos.y + fx_dist*dir.y
		fx_pos.z = pos.z + fx_dist*dir.z
		wallmarks_manager():place_skeleton(obj, "explosion_marks", fx_pos, dir, 0.2,-1)
		wood_fx(fx_pos,fx_pos)
	else
		local metal_hit_snd = sound_object("quick_melee\\metal\\metal_"..math.random(1,4))
		metal_hit_snd:play(obj, 0, sound_object.s2d)
		local fx_dist = db.actor:position():distance_to_sqr(obj:bone_position(bone_prop[1]))
		fx_pos.x = pos.x + fx_dist*dir.x
		fx_pos.y = pos.y + fx_dist*dir.y
		fx_pos.z = pos.z + fx_dist*dir.z
		wallmarks_manager():place_skeleton(obj, "explosion_marks", fx_pos, dir, 0.2,-1)
		metal_fx(fx_pos,fx_pos)
	end
	
	dir:mul(60000)
	local ph = obj:get_physics_shell()
	if ph then 
		ph_bone = ph:get_element_by_bone_id(bone) 
		if ph_bone then
			ph_bone:apply_force(dir.x,dir.y,dir.z)
		else
			ph:apply_force(dir.x,dir.y,dir.z)
		end
	end
	obj_ent = nil
	return true
end

function anim_end()
	if wpn then
		wpn:switch_state(3)
		wpn = nil
	end
	
	anm_state = 0
	
	return true
end